datasource db {
  provider = "mysql"
  url      = "mysql://admin:sa123@192.168.1.68:3306/palta_dev"
}

generator client {
  provider = "prisma-client-js"
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  firstName   String?
  LastName    String?
  //posts   Post[]
  //profile Profile?
}

model Palta {
  id     Int    @id @default(autoincrement())
  nombre String
  origen String
}

// ATENCIÓN:
// Para las relaciones de muchos a muchos implicitas (como en el caso de los modelos de abajo), 
// se migra todo x 1era vez (npx prisma migrate dev --name nombre),
// luego de esto se modifica el archivo de migración creado anteriormente, cambiando 
// nombres de los atributos al que nosotros queremos..
// Luego se realiza otra segunda migracion (npx prisma migrate dev),
// durante la migración, se ejecutara los archivos de migracion creados anteriormente
// (se ejecuta el modificado), y la consola te preguntará durante la migración, si quieres crear
// un nuevo archivo de migración, usted pondrá que no quiere, y entonces solo se migraran los archivos 
// de migración con las modificaciones deseadas.

model sec_usuario{
  id              Int         @id @default(autoincrement())
  lastUpdate      DateTime    @updatedAt
  created         DateTime    @default(now())
  estado          Int         @default(1)
  email           String      @unique
  firstName       String?     @db.VarChar(100)
  lastName        String?     @db.VarChar(100)
  fechaNacimiento DateTime?
  dni             Int?
  adress          String?     @db.VarChar(255)
  userName        String?     @db.VarChar(100)
  telefono        String?
  roles           sec_rol[]   @relation("sec_usuario_roles") 
  pass            String      @db.VarChar(100)
}

model sec_rol{
  id              Int           @id @default(autoincrement())
  lastUpdate      DateTime      @updatedAt
  created         DateTime      @default(now())
  estado          Int           @default(1)
  nombre          String?       @db.VarChar(255)
  description     String?       @db.VarChar(255)
  usuario         sec_usuario[] @relation("sec_usuario_roles") 
  roles           sec_permiso[] @relation("sec_rol_permisos") 
}

model sec_permiso{
  id              Int         @id @default(autoincrement())
  lastUpdate      DateTime    @updatedAt
  created         DateTime    @default(now())
  estado          Int         @default(1)
  nombre          String?     @db.VarChar(255)
  description     String?     @db.VarChar(255)
  rol             sec_rol[]   @relation("sec_rol_permisos") 
}